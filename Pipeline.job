#!/bin/bash

#SBATCH --partition=gpu_a100
#SBATCH --gpus=1
#SBATCH --job-name=run_augment_segthor
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=18
#SBATCH --time=01:00:00
#SBATCH --output=jobs/results/augmented/seghtor_augmented_%A.out

cd $HOME/scur1611/group_project/ai4mi_project
# Activate the environment
source /home/scur1611/ai4mi_project/ai4mi/bin/activate

# Check whether the GPU is available
# srun python -uc "import torch; print('GPU available?', torch.cuda.is_available())"

# Run full training on SEGTHOR_CLEAN
#srun python -O main.py --dataset SEGTHOR_CLEAN --mode full --epochs 25 --dest results/segthor_augmented_debug --gpu --augment  --debug 


#PREPROCESSING - SLICING
srun python -O slice_segthor_changes.py --source_dir data/segthor_fixed --dest_dir data/SEGTHOR_CLEAN_tmp --shape 256 256 --retain 10 -p -1
mv data/SEGTHOR_CLEAN_tmp data/SEGTHOR_CLEAN
# srun python slice_filter.py --in_root data/SEGTHOR_CLEAN --out_root data/SEGTHOR_FILTER --stats_grp_root data/SEGTHOR_CLEAN/train/gt -grp_regex "(Patient_\d\d)_\d\d\d\d"

#MAIN WITH DATA AUGMENTATION + LOSS + REGULARIZATION (ARQUITECTURE CHANGES ARE LEFT)
srun python -O main_changes.py --dataset SEGTHOR_CLEAN --mode tv --loss focal --epochs 50 --dest RESULTS_COMPLETE --gpu --augment rotate brightness contrast 

#PREPROCESSING (II)
# srun python slices_recover --dir RESULTS_COMPLETE/best_epoch/val --base_dir data/SEGTHOR_CLEAN/val/gt --dir_recover RESULTS_COMPLETE/best_epoch/val_complete

#STITCHING
#Prediction
python stitch.py --data_folder RESULTS_COMPLETE/best_epoch/val_complete --dest_folder RESULTS_STITCHED/val/pred --num_classes 5 --grp_regex "(Patient_\d\d)_\d\d\d\d" --source_scan_pattern "data/segthor_train/train/{id_}/GT.nii.gz"

#NINA PART IS LEFT 


