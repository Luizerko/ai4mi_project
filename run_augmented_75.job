#!/bin/bash

#SBATCH --partition=gpu_a100
#SBATCH --gpus=1
#SBATCH --job-name=run_augment_segthor_75ep
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=18
#SBATCH --time=08:00:00
#SBATCH --output=%x_%j.out

# Example usage:
# sbatch run_augmented_segthor_75ep.sh flip rotate

AUGS=("$@")
AUG_STR=$(IFS=_; echo "${AUGS[*]}")

PROJECT_DIR="/gpfs/home1/scur1645/group_project/ai4mi_project"
DISTORCH_DIR="/gpfs/home1/scur1645/group_project/distorch"
RESULTS_BASE="/scratch-shared/scur1645/results"
JOBS_BASE="${PROJECT_DIR}/jobs/results"

# ðŸ‘‡ add suffix to clearly distinguish 75-epoch experiments
BASE_DIR="${RESULTS_BASE}/segthor_augmented_${AUG_STR}_75ep"
OUT="${JOBS_BASE}/augmented_${AUG_STR}/segthor_augmented_75ep_%A.out"

RUNS=3
mkdir -p "$(dirname "${OUT}")"

echo "============================================"
echo "Running SEGTHOR (75 epochs) with augmentations: ${AUGS[*]}"
echo "Destination base: ${BASE_DIR}"
echo "Number of runs: ${RUNS}"
echo "============================================"

# Activate environment
cd "$PROJECT_DIR" || exit 1
source /gpfs/home1/scur1645/ai4mi_project/ai4mi/bin/activate

# 1. Training
echo "[1/5] Training ${RUNS} runs (75 epochs each)..."
for i in $(seq 1 "$RUNS"); do
  OUT_DIR="${BASE_DIR}_run_${i}"
  echo "Training run ${i}..."
  mkdir -p "${OUT_DIR}"
  srun python -O main.py \
    --dataset SEGTHOR_CLEAN \
    --mode full \
    --epochs 75 \
    --dest "${OUT_DIR}" \
    --gpu \
    --augment "${AUGS[@]}"
done

# 2. Stitching predicted validation outputs
echo "[2/5] Stitching validation predictions..."
cd "$PROJECT_DIR" || exit 1
for i in $(seq 1 "$RUNS"); do
  OUT_DIR="${BASE_DIR}_run_${i}"
  echo "Stitching predictions for run ${i}..."
  python piotr_stitch.py \
    --data_folder "${OUT_DIR}/best_epoch/val/" \
    --dest_folder "${OUT_DIR}/best_epoch/val_pred_stitched" \
    --num_classes 5 \
    --grp_regex '(Patient_\d\d)_\d\d\d\d' \
    --source_scan_pattern "${PROJECT_DIR}/data/segthor_train/train/{id_}/GT.nii.gz"
done

# 3. Computing metrics (compare stitched preds with ground truth)
echo "[3/5] Computing metrics..."
cd "$DISTORCH_DIR" || exit 1
for i in $(seq 1 "$RUNS"); do
  OUT_DIR="${BASE_DIR}_run_${i}"
  echo "Computing metrics for run ${i}..."
  python compute_metrics.py \
    --ref_folder "${PROJECT_DIR}/data/SEGTHOR_CLEAN/val/gt_stitched" \
    --pred_folder "${OUT_DIR}/best_epoch/val_pred_stitched" \
    --ref_extension .nii.gz \
    --pred_extension .nii.gz \
    --num_classes 5 \
    --metrics 3d_dice 3d_hd95 \
    --save_folder "${OUT_DIR}/best_epoch/val_pred_stitched"
done

# 4. Plotting metrics
echo "[4/5] Generating plots for each run..."
cd "$PROJECT_DIR" || exit 1
for i in $(seq 1 "$RUNS"); do
  OUT_DIR="${BASE_DIR}_run_${i}"
  echo "Generating plots for run ${i}..."
  python plot.py --metric_file "${OUT_DIR}/loss_tra.npy" --dest "${OUT_DIR}/loss_tra.png" --headless
  python plot.py --metric_file "${OUT_DIR}/loss_val.npy" --dest "${OUT_DIR}/loss_val.png" --headless
  python plot.py --metric_file "${OUT_DIR}/dice_tra.npy" --dest "${OUT_DIR}/dice_tra.png" --headless
  python plot.py --metric_file "${OUT_DIR}/dice_val.npy" --dest "${OUT_DIR}/dice_val.png" --headless
done

# 5. Averaging metrics
echo "[5/5] Computing average and standard deviation..."
python averaging_experiments.py \
  --arch "segthor_augmented_${AUG_STR}_75ep_run" \
  --base_dir "${RESULTS_BASE}" \
  --metrics 3d_dice 3d_hd95 \
  --runs "${RUNS}"

echo "============================================"
echo "75-epoch run completed successfully."
echo "Results saved under: ${BASE_DIR}_run_*"
echo "============================================"
